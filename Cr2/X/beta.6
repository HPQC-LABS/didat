 Fit an  MLR potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000

 Fit to   49 input turning points assuming common uncertainty  u(VTP)= 1.20D+01
 ------------------------------------------------------------------------------
    RTP       VTP     RTP       VTP     RTP       VTP     RTP       VTP 
 ------------------------------------------------------------------------------
  1.48260   7567.019  1.48647   7148.984  1.49017   6765.281  1.49548   6241.986
  1.50118   5715.587  1.51068   4912.471  1.52162   4095.126  1.53092   3482.805
  1.54268   2805.581  1.55465   2218.121  1.56258   1879.735  1.57242   1511.152
  1.58506   1112.964  1.60247    686.635  1.63146    234.625  1.65000     96.000
  1.67880      0.000  1.71000     53.000  1.73746    234.625  1.78947    686.635
  1.83206   1112.964  1.87342   1511.152  1.91558   1879.735  1.95865   2218.121
  2.00413   2526.471  2.05268   2805.581  2.10511   3056.778  2.16022   3281.821
  2.21992   3482.805  2.28308   3662.073  2.35063   3822.139  2.42050   3965.611
  2.56495   4213.288  2.63543   4322.614  2.70402   4425.486  2.76770   4524.112
  2.82443   4620.493  2.87418   4716.388  2.94900   4912.471  2.99400   5121.094
  3.04523   5465.768  3.06237   5588.955  3.07998   5715.587  3.09798   5844.996
  3.15320   6241.986  3.20806   6636.454  3.24375   6892.998  3.31689   7418.843
  3.33750   7567.019
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= Re  ; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.65; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.70; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.75; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 2.00; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 3.00; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 4.00; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 5.00; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 6.00; NL= 0} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= Re  ; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.65; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.70; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.75; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 2.00; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 3.00; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 4.00; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 5.00; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 6.00; NL= 1} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= Re  ; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.65; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.70; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.75; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 2.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 3.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 4.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 5.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 6.00; NL= 2} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= Re  ; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.65; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.70; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.75; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 2.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 3.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 4.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 5.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 6.00; NL= 3} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= Re  ; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.65; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.70; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.75; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 2.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 3.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 4.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 5.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 6.00; NL= 4} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 5; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 5; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 5; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 5; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 5; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 5)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_5 + (1-y_5)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 5; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 6; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 6; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 6; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 6; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 6; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 6)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_6 + (1-y_6)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 6; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_2(r)= [r^2 - Re^2]/[r^2 + Re^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.6500^2]/[r^2 + 1.6500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7000^2]/[r^2 + 1.7000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 1.7500^2]/[r^2 + 1.7500^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 2.0000^2]/[r^2 + 2.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 3.0000^2]/[r^2 + 3.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 4.0000^2]/[r^2 + 4.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 5.0000^2]/[r^2 + 5.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 2 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_2(r)= [r^2 - 6.0000^2]/[r^2 + 6.0000^2]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_2q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 2, p= 7; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_3(r)= [r^3 - Re^3]/[r^3 + Re^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.6500^3]/[r^3 + 1.6500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7000^3]/[r^3 + 1.7000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 1.7500^3]/[r^3 + 1.7500^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 2.0000^3]/[r^3 + 2.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 3.0000^3]/[r^3 + 3.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 4.0000^3]/[r^3 + 4.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 5.0000^3]/[r^3 + 5.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 3 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_3(r)= [r^3 - 6.0000^3]/[r^3 + 6.0000^3]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_3q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 3, p= 7; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_4(r)= [r^4 - Re^4]/[r^4 + Re^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.6500^4]/[r^4 + 1.6500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7000^4]/[r^4 + 1.7000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 1.7500^4]/[r^4 + 1.7500^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 2.0000^4]/[r^4 + 2.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 3.0000^4]/[r^4 + 3.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 4.0000^4]/[r^4 + 4.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 5.0000^4]/[r^4 + 5.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 4 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_4(r)= [r^4 - 6.0000^4]/[r^4 + 6.0000^4]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_4q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 4, p= 7; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_5(r)= [r^5 - Re^5]/[r^5 + Re^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.6500^5]/[r^5 + 1.6500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7000^5]/[r^5 + 1.7000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 1.7500^5]/[r^5 + 1.7500^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 2.0000^5]/[r^5 + 2.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 3.0000^5]/[r^5 + 3.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 4.0000^5]/[r^5 + 4.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 5.0000^5]/[r^5 + 5.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 5 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_5(r)= [r^5 - 6.0000^5]/[r^5 + 6.0000^5]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_5q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 5, p= 7; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_6(r)= [r^6 - Re^6]/[r^6 + Re^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.6500^6]/[r^6 + 1.6500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7000^6]/[r^6 + 1.7000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 1.7500^6]/[r^6 + 1.7500^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 2.0000^6]/[r^6 + 2.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 3.0000^6]/[r^6 + 3.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 4.0000^6]/[r^6 + 4.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 5.0000^6]/[r^6 + 5.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 6 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_6(r)= [r^6 - 6.0000^6]/[r^6 + 6.0000^6]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_6q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 6, p= 7; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
 Use exponent expansion variable:   y_7(r)= [r^7 - Re^7]/[r^7 + Re^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - Re^{p/q}]/[r^{p/q} + Re^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= Re  ; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-     NaN)   PS=    -NaN   DSE=     -NaN
  beta_{ 1}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 2}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 3}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 4}=                 NaN (+/-     NaN)   PS=    -NaN
  beta_{ 5}=                 NaN (+/-     NaN)   PS=    -NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.6500^7]/[r^7 + 1.6500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.6500^{p/q}]/[r^{p /q} + 1.6500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.65; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7000^7]/[r^7 + 1.7000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7000^{p/q}]/[r^{p /q} + 1.7000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.70; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 1.7500^7]/[r^7 + 1.7500^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 1.7500^{p/q}]/[r^{p /q} + 1.7500^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 1.75; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 2.0000^7]/[r^7 + 2.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 2.0000^{p/q}]/[r^{p /q} + 2.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 2.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 3.0000^7]/[r^7 + 3.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 3.0000^{p/q}]/[r^{p /q} + 3.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 3.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 4.0000^7]/[r^7 + 4.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 4.0000^{p/q}]/[r^{p /q} + 4.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 4.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 5.0000^7]/[r^7 + 5.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 5.0000^{p/q}]/[r^{p /q} + 5.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 5.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

 Fit an  MLR(q= 7 p= 7)  potential function to the input points
 =========================================================
     with initial   VMIN=       0.0000   Re= 1.67880000   De= 11600.0000
  Use exponent expansion variable:   y_7(r)= [r^7 - 6.0000^7]/[r^7 + 6.0000^7]
 MLR polynomial exponent function is:
                             beta(R)= betaINF*y_7 + (1-y_7)*Sum{beta_i*[y_7q]^i}
      in which   y_{p/q}(r)= [r^{p/q} - 6.0000^{p/q}]/[r^{p /q} + 6.0000^{p/q}]
 uLR(r) inverse-power terms incorporate DS damping with  rhoAB= 1.0000000
        defined to give very short-range damped uLR-term behaviour  r^{-2/2}
                                                 C 6= 3.51814704D+06
                                                 C 8= 4.72347299D+07
                                                 C10= 6.81240775D+04
 Linearized fit uses    beta(INF)= -1.29839025

 Direct fit to  MLR{q= 7, p= 7; Rref= 6.00; NL= 5} potential:   dd=        -NaN
  beta_{ 0}=                 NaN (+/-    -NaN)   PS=     NaN   DSE=        -NaN
  beta_{ 1}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 2}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 3}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 4}=                 NaN (+/-    -NaN)   PS=     NaN
  beta_{ 5}=                 NaN (+/-    -NaN)   PS=     NaN
        Re =         -NaN (+/-         NaN)      PS=     NaN
        De = 11600.000000 (+/-    0.000000)      PS= 0.0D+00
      VMIN =      0.00000 (+/-    0.000000)      PS= 0.0D+00
 ------------------------------------------------------------------------------

